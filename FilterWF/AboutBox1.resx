<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAQCAwMDAgQDAwMEBAQEBQkGBQUFBQsICAYJDQsNDQ0LDAwO
        EBQRDg8TDwwMEhgSExUWFxcXDhEZGxkWGhQWFxb/2wBDAQQEBAUFBQoGBgoWDwwPFhYWFhYWFhYWFhYW
        FhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhb/wAARCAB+AHQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD70JO7pRk+lDfeooAQE+lLk+lAooAMn0oyfSiigAyfSjJ9KKKA
        DJ9KTJz0paO9ABk+lG4+lFZ/izUm0fwrqerrHbyHT7Ga6CXN0LaJjHGz4eYgiNeOXIIUc44oA5j4ifGD
        4ZeAvFlj4b8aeNdK0HUtRtjdW0WoSNEjRBiu4yEbF+YEAMwJwcdK7VXDIGXkMMg1+R/gX4s+Fvir+13b
        /Ef9pLWLmPRrVTNb2llZNNbRmJt9vZmNcssGSxOAxZvvffZx+jHw1/aX+CvjPwTZeJoPHekaLHf3TWq2
        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
</value>
  </data>
</root>